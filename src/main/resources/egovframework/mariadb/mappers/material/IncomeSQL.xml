<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="apc.sl.material.income.service.impl.IncomeMapper">
	<select id="selectIncomeListToCnt" resultType="int">
		SELECT COUNT(*) FROM sm_store a
		JOIN sm_item b ON a.ITEM_CD=b.ITEM_CD
		WHERE 1=1
		<if test="searchKeyword != ''">
			AND item_name = #{searchKeyword}
		</if>
		<if test="searchStDate != ''">
			AND st_dte >= #{searchStDate}
		</if>
		<if test="searchEdDate !=''">
			AND st_dte <![CDATA[<=]]>
			#{searchEdDate}
		</if>
	</select>

	<select id="selectIncomeList" resultType="egovMap">
		SELECT
		a.st_idx,
		a.item_cd,
		b.item_name,
		b.item_standard,
		FORMAT(a.st_cnt, 0) AS st_cnt,
		DATE_FORMAT(a.st_dte, '%Y/%m/%d %H:%i:%s') AS st_dte
		FROM sm_store a
		JOIN sm_item b
		ON
		a.item_cd = b.item_cd
		WHERE 1=1
		<if test="searchKeyword != ''">
			AND b.item_name LIKE CONCAT('%',#{searchKeyword},'%')
		</if>
		<if test="searchStDate != ''">
			AND a.st_dte >= #{searchStDate}
		</if>
		<if test="searchEdDate !=''">
			AND a.st_dte <![CDATA[<=]]>
			#{searchEdDate}
		</if>
		ORDER BY a.st_idx DESC
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>

	<select id="selectAccountList" resultType="egovMap">
		SELECT * FROM
		sm_account
	</select>

	<select id="selectMaterialList" resultType="egovMap">
		SELECT * FROM sm_item
		WHERE item_type = '자재'
	</select>

	<select id="selectCompanyList" resultType="egovMap">
		SELECT c_idx, c_name
		FROM sm_company
	</select>

	<select id="selectItemInfo" resultType="egovMap">
		SELECT item_cd,
		item_name, item_std FROM sm_item WHERE item_cd = #{itemCd}
	</select>

	<insert id="registIncome">
		INSERT INTO sm_store
		(
		st_idx,
		c_idx,
		a_idx,
		item_cd,
		st_cnt,
		st_location,
		st_dte,
		st_ins_dte,
		st_tot_judge,
		st_note,
		st_reg_dte,
		st_reg_mem
		)
		VALUES
		(
		(SELECT CONCAT('ST', LPAD((SELECT (SELECT REGEXP_REPLACE((SELECT
		IFNULL(MAX(a.st_idx),0) FROM sm_store a),'[a-z]','')))+1,10,0))),
		#{cIdx},
		#{aIdx},
		#{itemCd},
		#{stCnt},
		#{stLocation},
		#{stDte},
		#{stInsDte},
		#{stTotJudge},
		#{stNote},
		NOW(),
		#{userId}
		)
	</insert>

	<update id="updateMaterialCnt">
		UPDATE sm_item SET
		item_stock = (item_stock + #{cnt})
		WHERE item_cd = #{itemCd}
	</update>

	<select id="selectIncomeInfo" resultType="egovMap">
		SELECT
		a.st_idx,
		a.c_idx,
		a.a_idx,
		a.item_cd,
		a.st_cnt,
		a.st_location,
		DATE_FORMAT(a.st_dte, '%Y-%m-%d %H:%i') AS st_dte,
		DATE_FORMAT(a.st_ins_dte, '%Y-%m-%d %H:%i') AS st_ins_dte,
		a.st_tot_judge,
		a.st_note,
		DATE_FORMAT(a.st_reg_dte, '%Y-%m-%d %H:%i') AS st_reg_dte,
		a.st_reg_mem,
		b.ac_name,
		b.ac_tel,
		(SELECT m_name FROM sm_member WHERE m_id = (SELECT st_reg_mem FROM sm_store
		WHERE st_idx = #{stIdx})) AS mName,
		c.item_name,
		d.c_name
		FROM sm_store a
		JOIN sm_account b
		ON a.a_idx = b.ac_code
		JOIN sm_item c
		ON a.item_cd = c.item_cd
		JOIN sm_company d
		ON a.c_idx = d.c_idx
		WHERE
		st_idx = #{stIdx}
	</select>

	<update id="modifyIncome">
		UPDATE sm_store SET
		c_idx = #{cIdx},
		a_idx = #{aIdx},
		item_cd = #{itemCd},
		st_cnt = #{stCnt},
		st_location = #{stLocation},
		st_dte = #{stDte},
		st_ins_dte = #{stInsDte},
		st_tot_judge = #{stTotJudge},
		st_note = #{stNote},
		st_edt_dte = NOW(),
		st_edt_mem = #{userId}
		WHERE st_idx = #{stIdx}
	</update>

	<delete id="deleteIncome">
		DELETE FROM sm_store WHERE st_idx = #{stIdx}
	</delete>
</mapper>