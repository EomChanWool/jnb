<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="apc.sl.quality.incongruent.service.impl.IncongruentMapper">

	<select id="selectIncongruentListToCnt" resultType="int">
		SELECT COUNT(*) FROM sm_incongruity
		WHERE 1=1
		<if test="searchKeyword != ''">
			AND in_name LIKE CONCAT('%',#{searchKeyword},'%')
		</if>
		<if test="searchStDate != ''">
			AND in_reg_dte >= #{searchStDate}
		</if>
		<if test="searchEdDate !=''">
			AND in_reg_dte <![CDATA[<=]]>
			#{searchEdDate}
		</if>

	</select>

	<select id="selectIncongruentList" resultType="egovMap">
		SELECT
		b.in_idx,
		b.in_name,
		bi.bi_name,
		ti.ti_name,
		DATE_FORMAT(b.in_REG_DTE,'%Y-%m-%d') AS in_reg_dte
		FROM
		sm_incongruity b
		INNER JOIN sm_bad_item bi ON b.bi_idx = bi.bi_idx
		INNER JOIN
		sm_analysis_info ti ON b.ti_idx = ti.ti_idx
		WHERE 1=1


		<if test="searchKeyword != ''">
			AND in_name LIKE CONCAT('%',#{searchKeyword},'%')
		</if>
		<if test="searchStDate != ''">
			AND in_reg_dte >= #{searchStDate}
		</if>
		<if test="searchEdDate !=''">
			AND in_reg_dte <![CDATA[<=]]>
			#{searchEdDate}
		</if>
		ORDER BY in_idx DESC
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>

	<select id="selectTiList" resultType="egovMap">
		SELECT ti_idx, ti_name
		FROM sm_analysis_info
		WHERE ti_state = '부적합' AND ti_idx NOT IN (
		SELECT ti_IDX
		FROM sm_incongruity
		)
	</select>

	<select id="selectBiList" resultType="egovMap">
		select bi_idx, bi_name FROM
		sm_bad_item
	</select>

	<select id="selectInfo" resultType="egovMap">
		SELECT az_idx, ti_name FROM
		sm_analysis_info WHERE ti_idx = #{tiIdx}
	</select>

	<select id="selectTiIdx" resultType="int">
		SELECT COUNT(*) FROM
		sm_analysis_info WHERE ti_idx= #{tiIdx}
	</select>

	<select id="selectInco" resultType="egovMap">
		SELECT in_idx, in_name,
		ti_idx,
		(SELECT
		a.ti_name
		FROM
		sm_incongruity b
		JOIN sm_analysis_info a ON
		a.ti_idx =
		b.ti_idx
		WHERE b.in_idx = #{inIdx}) AS ti_name,
		az_idx,
		bi_idx,
		in_note
		FROM sm_incongruity WHERE in_idx = #{inIdx}
	</select>

	<insert id="registIncongruent">
		INSERT INTO sm_incongruity(
		IN_IDX,
		IN_NAME,
		AZ_IDX,
		TI_IDX,
		IN_REG_DTE,
		IN_REG_MEM,
		BI_IDX,
		IN_NOTE
		) VALUES(
		(SELECT
		CONCAT('IN', LPAD((SELECT (SELECT REGEXP_REPLACE((SELECT
		IFNULL(MAX(a.in_idx),0)
		FROM sm_incongruity a),'[a-z]','')))+1,10,0))),
		#{inName},
		#{azIdx},
		#{tiIdx},
		NOW(),
		#{userId},
		#{biIdx},
		#{inNote}
		)
	</insert>

	<update id="modifyIncongruent">
		UPDATE sm_incongruity SET
		in_name = #{inName},
		bi_idx =
		#{biIdx},
		in_note = #{inNote},
		in_edt_dte = now(),
		in_edt_mem = #{userId}
		WHERE in_idx = #{inIdx}
	</update>

	<delete id="deleteIncongruent">

		DELETE FROM sm_incongruity WHERE in_idx = #{inIdx}

	</delete>

</mapper>